pipeline{
    agent { label 'verify' }
    post {
        always{
                wrap([$class: 'BuildUser']) {
                   script {
                       BUILD_USER = "${env.BUILD_USER}"
                       BUILD_USER_EMAIL = "${env.BUILD_USER_EMAIL}"
                   }
				}
            mail bcc: '', body: "Dear ${BUILD_USER},\n\n\tBuild Finished. Please check the result.", 
            cc: 'li.xu@cixtech.com',
            from: 'devops@cixcomputing.com', replyTo: '', 
            subject: "Lab loader finished", 
            to: "${BUILD_USER_EMAIL}"
        }
    }
    parameters {
        stashedFile(name: 'non_default_flash_fw',
        description: 'Usually this argment should NOT be used. If you have special requirements to firmware, upload the selected non_default flash firmware like cix_flash_all.bin here.')
        choice(name: 'as_default', choices: ['No', 'Yes'], 
        description: 'Whether to update the uploaded FW as default firmware.')
    }
    environment {
        SH_ADF = "$params.as_default"
        SH_JBN = "${JOB_BASE_NAME}"
    }
    stages {
        stage('FW Flashing') {
            steps{
                echo 'This is Firware Flashing step'
                unstash 'non_default_flash_fw'
                sh '''
                eqfw='null'
                [ -s "non_default_flash_fw" ] &&  eqfw="non_default_flash_fw"
                echo "file is: non_default_flash_fw"
                pname=`echo $SH_JBN | cut -d'_' -f3 | tr A-Z a-z`
                adm=`echo $SH_JBN | cut -d'_' -f4 | tr A-Z a-z`
                [ -z "$adm" ] && eqfw='null'
                python3 fpga_pdc/swflash.py $pname $eqfw $SH_ADF
                '''
            }
        }
    }
}
